/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
 
    
    
    public boolean findTarget(TreeNode root, int k) {
        
        Set<Integer> set = new HashSet<>();
        Queue<TreeNode> q = new LinkedList<>();
        
        q.add(root);
        
        while(q.size()!=0){
            TreeNode curr = q.remove();
            
            if(set.contains(k - curr.val)){
                return true; //node with value = (k-curr.val) and the curr node togother makes the req. sum
            }
            
            set.add(curr.val);
            
            if(curr.left!=null){
                q.add(curr.left);
            }
            
            if(curr.right!=null){
                q.add(curr.right);
            }
        }
        
        return false;
        
        
    
        
        
    }
}
